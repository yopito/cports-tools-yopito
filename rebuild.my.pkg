#!/bin/bash
#
# (todo) command-line option to restrict to a given tarch
# (todo) command-line option to skip build on native arch
# (todo) command-line option to enable testing (native arch)
#
# 2021-08-25 pkg list: +dialog, +zsh, comment DEPRECATED pkg
# 2021-08-20 db 1.85 and nvi2 are fine
# 2021-08-16 reuse ./build.scratch
# 2021-08-16 target unified, native arch first
#
# known status
kb="""
  - neovim   FAIL build broken (wip)
  - dialog   XXX crossbuild status unknown
  - db       XXX crossbuild status unknown
  - zsh      XXX crossbuild status unknown
"""

# list of package to rebuild
pkglist=
# ccache is known to build everywhere
pkglist+=" main/ccache"
pkglist+=" contrib/dialog"
pkglist+=" contrib/zsh"
pkglist+=" contrib/strace"
pkglist+=" contrib/db5 contrib/nvi"
pkglist+=" contrib/m4 contrib/autoconf contrib/automake"
pkglist+=" contrib/uthash contrib/librsync contrib/musl-legacy-compat"
pkglist+=" contrib/burp"
pkglist+=" contrib/libuv contrib/msgpack contrib/neovim"
pkglist+=" contrib/libmd contrib/libbsd contrib/db contrib/nvi2"
pkglist+=" contrib/zsh"

# deprecated packages
#pkglist+=" contrib/db18"
#pkglist+=" contrib/db1"

# native arch
narch=$(uname -m)


# all target arch with native first
# (for instance: x86_64 ppc64 aarch64 riscv64 ppc64le)
tarch=
tarch="$(ls cbuild/build_profiles/*.ini | xargs -I% -n 1 basename % .ini | grep -vw bootstrap | grep -vw ${narch})"
tarch="${narch} ${tarch}"


summary=

if [ ! -x "./build.scratch" ]
then
  echo "[ERROR] ./build.scratch is required"
  exit 1
fi
 
# loop on each package, native arch first
for pkg in ${pkglist}
do
    for arch in ${tarch}
    do
        st=FAIL
        echo "# arch=${arch} build ${pkg} ..."
        ./build.scratch "-a ${arch}" ${pkg}
        [ $? -eq 0 ] && st="OK  "
        item="${st} arch=${arch} pkg ${pkg}"
        echo "# ${item}"
        summary+="${item}\n"
        echo "# rebuild PARTIAL summary:"
        echo -e "${summary}"
    done
done

echo
echo "---------------------------------------------"
echo "known status:"
echo -e "${kb}"
echo "---------------------------------------------"
echo
echo "---------------------------------------------"
echo "Summary:"
echo -e "${summary}"
echo "---------------------------------------------"
